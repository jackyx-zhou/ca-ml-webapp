{"version":3,"sources":["components/TwoColumnsGrid.jsx","components/Home.jsx","components/ElemCA/ElemCAtfjs.js","components/MarginedContainer.jsx","components/ElemCA/ElemCARuleCell.jsx","components/ElemCA/ElemCAp5.js","components/ElemCA/ElemCARuleController.jsx","components/ElemCA.jsx","helper/createVisor.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","TwoColumnsGrid","props","classes","className","Grid","container","item","xs","sm","Paper","left","right","Home","alt","style","maxWidth","src","trainXs","Array","keys","reverse","map","x","toString","padStart","model","caRuleNum","a","metrics","name","tab","fitCallbacks","tfvis","onEpochEnd","epoch","logs","stopTraining","trainYs","split","Number","tf","fit","epochs","callbacks","styled","Container","marginBottom","image","position","flexDirection","zIndex","ElemCARuleCell","onPic","process","id","offPic","cellToggle","toggle","ButtonBase","focusRipple","focusVisibleClassName","focusVisible","index","undefined","onClick","Typography","variant","ElemCAp5","parent","ruleNum","n","p5","sketch","CA","this","w","Math","floor","width","cells","i","length","generation","ruleset","parseInt","generate","nextgen","me","rules","display","fill","noStroke","rect","b","c","ca","setup","createCanvas","offsetWidth","resizeCanvas","background","draw","height","windowResized","buttonIds","ElemCARuleController","setRuleNum","useState","error","setError","toggles","setToggles","elemP5Parent","useRef","canvas","setCanvas","handleCellClick","event","t","currentTarget","newToggles","getAttribute","reduce","total","togglesToNum","MarginedContainer","TextField","label","type","value","onChange","input","target","isNaN","helperText","Button","remove","current","ref","ElemCA","hiddenLayerUnits","setHiddenLayerUnits","setModel","isTraining","setIsTraining","modelP5Parent","surface1","surface2","surface3","open","gutterBottom","justify","Slider","newValue","aria-labelledby","min","max","Input","margin","onBlur","inputProps","m","add","inputLayer","inputShape","dense","units","activation","optimizer","sgd","compile","loss","catf","modelSummary","layer","getLayer","predRule","data","predict","dataSync","console","log","then","disabled","createVisor","visor","el","children","close","drawerWidth","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","App","useTheme","setOpen","useEffect","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","e","preventDefault","edge","noWrap","Drawer","direction","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.797f9729.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction TwoColumnsGrid(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>\r\n          \r\n            {props.left}\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>\r\n\r\n            {props.right}\r\n            \r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TwoColumnsGrid;","import React from \"react\";\r\nimport TwoColumnsGrid from './TwoColumnsGrid'\r\n\r\nexport default function Home() {\r\n  const left = (\r\n    <>\r\n      <h1>Cellular Automata</h1>\r\n      <img alt=\"\" style={{ maxWidth: '100%' }} src='https://miro.medium.com/max/1024/1*pNLSLasaYXb9wgBPpGXZSw.gif' />\r\n    </>\r\n  )\r\n  const right = (\r\n    <>\r\n      <h1>Machine Learning</h1>\r\n      <img alt=\"\" style={{ maxWidth: '100%' }} src=\"https://miro.medium.com/max/3000/1*n3TBO5i8hrYAujlhiHoE_w.gif\" />\r\n    </>\r\n  )\r\n  return <TwoColumnsGrid left={left} right={right}/>;\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\n\r\nlet trainXs = [...Array(8).keys()].reverse().map(x => {\r\n    return x.toString(2).padStart(3, '0');\r\n})\r\n\r\ntrainXs = trainXs.map(x => {\r\n    return x.split(\"\").map(Number);\r\n})\r\n\r\ntrainXs = tf.stack(trainXs);\r\n\r\nexport function getModel(hiddenLayerUnits) {\r\n    const model = tf.sequential();\r\n    const INPUT_SIZE = 3;\r\n\r\n    model.add(tf.layers.inputLayer({ inputShape: [INPUT_SIZE] }));\r\n    if (hiddenLayerUnits > 0) {\r\n        model.add(tf.layers.dense({\r\n            units: hiddenLayerUnits,\r\n            activation: 'relu'\r\n        }));\r\n    }\r\n\r\n    model.add(tf.layers.dense({\r\n        units: 1,\r\n        activation: 'sigmoid'\r\n    }))\r\n    \r\n    // Choose an optimizer, loss function and accuracy metric,\r\n    // then compile and return the model\r\n    const optimizer = tf.train.sgd(0.2);\r\n    model.compile({\r\n        optimizer: optimizer,\r\n        loss: 'binaryCrossentropy',\r\n        metrics: ['accuracy'],\r\n    });\r\n\r\n    return model;\r\n}\r\n\r\nexport async function train(model, caRuleNum) {\r\n    const metrics = ['loss', 'acc'];\r\n    const container = {\r\n        name: 'Model Training', tab: '1D CA'\r\n    };\r\n    const fitCallbacks = {...tfvis.show.fitCallbacks(container, metrics,), \r\n        onEpochEnd: (epoch, logs) => {\r\n            if (logs['acc'] > 0.9) model.stopTraining = true;\r\n        }};\r\n\r\n    let trainYs = caRuleNum.toString(2).padStart(8, '0').split(\"\").map(Number);\r\n    trainYs = tf.stack(trainYs);\r\n\r\n    return model.fit(trainXs, trainYs, {\r\n        epochs: 500,\r\n        callbacks: fitCallbacks\r\n    });\r\n}\r\n\r\nexport function doPrediction(model, data, testDataSize = 500) {\r\n    let preds = model.predict(trainXs).dataSync();\r\n    return preds.map(x => Number(x > 0.5));\r\n}\r\n\r\n// async function showAccuracy(model, data) {\r\n//     const [preds, labels] = doPrediction(model, data);\r\n//     const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\r\n//     const container = { name: 'Accuracy', tab: 'Evaluation' };\r\n//     tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\r\n\r\n//     labels.dispose();\r\n// }\r\n\r\n// async function showConfusion(model, data) {\r\n//     const [preds, labels] = doPrediction(model, data);\r\n//     const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\r\n//     const container = { name: 'Confusion Matrix', tab: 'Evaluation' };\r\n//     tfvis.render.confusionMatrix(container, { values: confusionMatrix, tickLabels: classNames });\r\n\r\n//     labels.dispose();\r\n// }\r\n","import { styled } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport default styled(Container)({\r\n    maxWidth: '100%',\r\n    marginBottom: 20,\r\n});","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ButtonBase, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        '&:hover': {\r\n            zIndex: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ElemCARuleCell(props) {\r\n    const onPic = process.env.PUBLIC_URL + '/caButtons/' + props.id + 'on.png';\r\n    const offPic = process.env.PUBLIC_URL + '/caButtons/' + props.id + 'off.png';\r\n    const cellToggle = props.toggle;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n            id={props.id}\r\n            index={props.index}\r\n            toggle={props.toggle ? 1 : undefined}\r\n            onClick={props.onClick}\r\n        >\r\n            <img src={cellToggle ? onPic : offPic} alt={props.id + \" state\"}/>\r\n            <br/>\r\n            <Typography variant=\"button\"> {cellToggle ? 1 : 0} </Typography>\r\n        </ButtonBase>\r\n    )\r\n} ","import p5 from 'p5';\r\n\r\nexport default function ElemCAp5(parent, ruleNum) {\r\n    const n = 64;\r\n    const s = (sketch) => {\r\n        function CA(ruleNum) {\r\n            this.w = Math.floor(sketch.width / n);\r\n            this.cells = new Array(n);\r\n            for (let i = 0; i < this.cells.length; i++) {\r\n                this.cells[i] = 0;\r\n            }\r\n            // We arbitrarily start with just the middle cell having a state of \"1\"\r\n            this.cells[this.cells.length / 2] = 1;\r\n            this.generation = 0;\r\n            this.ruleset = ruleNum.toString(2).padStart(8, '0').split('').map(x => parseInt(x));\r\n\r\n            this.generate = () => {\r\n                // First we create an empty array filled with 0s for the new values\r\n                var nextgen = [];\r\n                for (let i = 0; i < this.cells.length; i++) {\r\n                    nextgen[i] = 0;\r\n                }\r\n                // For every spot, determine new state by examing current state, and neighbor states\r\n                // Ignore edges that only have one neighor\r\n                for (let i = 1; i < this.cells.length - 1; i++) {\r\n                    var left = this.cells[i - 1];   // Left neighbor state\r\n                    var me = this.cells[i];     // Current state\r\n                    var right = this.cells[i + 1];   // Right neighbor state\r\n                    nextgen[i] = this.rules(left, me, right); // Compute next generation state based on ruleset\r\n                }\r\n                // The current generation is the new generation\r\n                this.cells = nextgen;\r\n                this.generation++;\r\n            };\r\n\r\n            this.display = function () {\r\n                for (var i = 0; i < this.cells.length; i++) {\r\n                    if (this.cells[i] === 1) sketch.fill(200);\r\n                    else sketch.fill(51);\r\n                    sketch.noStroke();\r\n                    sketch.rect(i * this.w, this.generation * this.w, this.w, this.w);\r\n                }\r\n            };\r\n\r\n            this.rules = function (a, b, c) {\r\n                if (a === 1 && b === 1 && c === 1) return this.ruleset[0];\r\n                if (a === 1 && b === 1 && c === 0) return this.ruleset[1];\r\n                if (a === 1 && b === 0 && c === 1) return this.ruleset[2];\r\n                if (a === 1 && b === 0 && c === 0) return this.ruleset[3];\r\n                if (a === 0 && b === 1 && c === 1) return this.ruleset[4];\r\n                if (a === 0 && b === 1 && c === 0) return this.ruleset[5];\r\n                if (a === 0 && b === 0 && c === 1) return this.ruleset[6];\r\n                if (a === 0 && b === 0 && c === 0) return this.ruleset[7];\r\n                return 0;\r\n            };\r\n        }\r\n\r\n        // let x = 100;\r\n        // let y = 100;\r\n\r\n        let ca;\r\n        sketch.setup = () => {\r\n            sketch.createCanvas(0.8 * parent.offsetWidth, 0.8 * parent.offsetWidth);\r\n            ca = new CA(ruleNum);\r\n            sketch.resizeCanvas(n * ca.w, n * ca.w);\r\n            sketch.background(0);\r\n        };\r\n\r\n        sketch.draw = () => {\r\n            ca.display();\r\n            if (ca.generation < sketch.height / ca.w) {\r\n                ca.generate();\r\n            }\r\n        };\r\n\r\n        sketch.windowResized = () => {\r\n            sketch.resizeCanvas(0.8 * parent.offsetWidth, 0.8 * parent.offsetWidth);\r\n            ca = new CA(ruleNum);\r\n            sketch.resizeCanvas(n * ca.w, n * ca.w);\r\n            sketch.background(0);\r\n        }\r\n    };\r\n\r\n    let elemp5 = new p5(s, parent);\r\n    return elemp5;\r\n}","import React, { useState, useRef } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport MarginedContainer from '../MarginedContainer';\r\nimport ElemCARuleCell from './ElemCARuleCell';\r\nimport ElemCAp5 from './ElemCAp5'\r\n\r\nconst buttonIds = [...Array(8).keys()].reverse().map(x => {\r\n    return x.toString(2).padStart(3, '0');\r\n})\r\n\r\nconst numToToggles = (num) => {\r\n    const numList = num.toString(2).padStart(8, '0').split('');\r\n    return numList.map(x => !!parseInt(x));\r\n}\r\n\r\nconst togglesToNum = (toggles) => {\r\n    const t = [...toggles]\r\n    return t.reverse().reduce((total, t, i) => {\r\n        return total += t * 2 ** i;\r\n    }, 0);\r\n}\r\n\r\nexport default function ElemCARuleController(props) {\r\n    const ruleNum = props.ruleNum;\r\n    const setRuleNum = props.setRuleNum;\r\n    const [error, setError] = useState(false);\r\n    const [toggles, setToggles] = useState([...Array(8).fill(false)])\r\n    const elemP5Parent = useRef(null);\r\n    const [canvas, setCanvas] = useState(null);\r\n\r\n    const handleRuleNumChange = event => {\r\n        let input = event.target.value\r\n        \r\n        if (isNaN(input)) {\r\n            setError(true);\r\n        } else {\r\n            input = parseInt(input)\r\n            if (input < 0 || input > 255) setError(true);\r\n            else {\r\n                setError(false);\r\n                setRuleNum(input);\r\n                setToggles(numToToggles(input));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCellClick = event => {\r\n        const t = event.currentTarget;\r\n        const newToggles = [...toggles];\r\n        newToggles[parseInt(t.getAttribute('index'))] = !t.getAttribute('toggle');\r\n\r\n        setToggles(newToggles);\r\n        setRuleNum(togglesToNum(newToggles));\r\n    }\r\n\r\n    const handleRenderButtonClick = event => {\r\n        if (canvas) canvas.remove();\r\n        setCanvas(ElemCAp5(elemP5Parent.current, ruleNum));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MarginedContainer>\r\n                {buttonIds.map((id, index) => (\r\n                    <ElemCARuleCell id={id}\r\n                        key={index}\r\n                        index={index}\r\n                        toggle={toggles[index] ? 1 : undefined}\r\n                        onClick={handleCellClick}>\r\n                    </ElemCARuleCell>\r\n                ))}\r\n            </MarginedContainer>\r\n\r\n            <MarginedContainer>\r\n                <TextField\r\n                    error={error}\r\n                    id=\"rule-num-inpput\"\r\n                    label=\"Rule Number\"\r\n                    type=\"number\"\r\n                    value={ruleNum}\r\n                    variant=\"outlined\"\r\n                    onChange={handleRuleNumChange}\r\n                    helperText={error ? \"Only number between 0 and 255 allowed!\" : \r\n                                        \"Suggestion: 30, 135, 193\"}\r\n                />\r\n            </MarginedContainer>\r\n            <MarginedContainer>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleRenderButtonClick}>\r\n                    Visualise\r\n                </Button>\r\n            </MarginedContainer>\r\n            <MarginedContainer ref={elemP5Parent}>\r\n                <></>\r\n            </MarginedContainer> \r\n        </>\r\n    )\r\n}","\r\nimport React, { useState, useRef } from \"react\";\r\nimport { Button, Typography, Slider, Input, Grid } from \"@material-ui/core\";\r\nimport * as tfvis from \"@tensorflow/tfjs-vis\"\r\nimport * as catf from \"./ElemCA/ElemCAtfjs\";\r\n\r\nimport TwoColumnsGrid from './TwoColumnsGrid';\r\nimport MarginedContainer from './MarginedContainer';\r\nimport ElemCARuleController from './ElemCA/ElemCARuleController';\r\nimport ElemCAp5 from './ElemCA/ElemCAp5'\r\n\r\nexport default function ElemCA() {\r\n  const [ruleNum, setRuleNum] = useState(0);\r\n  const [hiddenLayerUnits, setHiddenLayerUnits] = useState(0);\r\n  const [model, setModel] = useState(null);\r\n  const [isTraining, setIsTraining] = useState(false);\r\n  const modelP5Parent = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  const surface1 = { name: 'Model summary', tab: '1D CA' };\r\n  const surface2 = { name: 'Hidden Layer Summary', tab: '1D CA' };\r\n  const surface3 = { name: 'Hidden Layer Summary Post Training', tab: '1D CA'}\r\n\r\n  const handleVisorButtonClick = event => {\r\n    tfvis.visor().open();\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    if (hiddenLayerUnits < 0) {\r\n      setHiddenLayerUnits(0);\r\n    } else if (hiddenLayerUnits > 32) {\r\n      setHiddenLayerUnits(32);\r\n    }\r\n  };\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setHiddenLayerUnits(newValue);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setHiddenLayerUnits(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBuildButtonClick = (event) => {\r\n    let m = catf.getModel(hiddenLayerUnits);\r\n    tfvis.show.modelSummary(surface1, m);\r\n    tfvis.show.layer(surface2, m.getLayer(undefined, 1));\r\n    tfvis.visor().open();\r\n    setModel(m);\r\n  };\r\n\r\n  const handleTrainModelButtonClick = event => {\r\n    catf.train(model, ruleNum).then(() => {\r\n      setIsTraining(false);\r\n      tfvis.show.layer(surface3, model.getLayer(undefined, 1));\r\n    });\r\n    tfvis.visor().open();\r\n    setIsTraining(true);\r\n  }\r\n\r\n  const handleStopTrainingButtonClick = event => {\r\n    model.stopTraining = true;\r\n    setIsTraining(false);\r\n    tfvis.show.layer(surface2, model.getLayer(undefined, 1));\r\n  }\r\n\r\n  const handleVisualiseModelButtonClick = (event) => {\r\n    let predRule = catf.doPrediction(model).reverse().reduce((total, t, i) => {\r\n      return total += t * 2 ** i;\r\n    }, 0);\r\n    console.log(predRule);\r\n    if (canvas) canvas.remove();\r\n    setCanvas(ElemCAp5(modelP5Parent.current, predRule));\r\n  }\r\n\r\n  const left = (\r\n    <>\r\n      <ElemCARuleController ruleNum={ruleNum} setRuleNum={setRuleNum} />\r\n    </>\r\n  )\r\n  const right = (\r\n    <>\r\n      <MarginedContainer>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleVisorButtonClick}>\r\n          Show training progress\r\n        </Button>\r\n      </MarginedContainer>\r\n      <MarginedContainer>\r\n        <Typography id=\"hidden-unit-slider\" gutterBottom>\r\n          Units in hidden layer\r\n        </Typography>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item>\r\n            <Slider\r\n              value={typeof hiddenLayerUnits === 'number' ? hiddenLayerUnits : 0}\r\n              onChange={handleSliderChange}\r\n              aria-labelledby=\"hidden-unit-slider\"\r\n              style={{ width: 64 }}\r\n              min={0}\r\n              max={32}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              value={hiddenLayerUnits}\r\n              margin=\"dense\"\r\n              onChange={handleInputChange}\r\n              onBlur={handleBlur}\r\n              inputProps={{\r\n                min: 0,\r\n                max: 32,\r\n                type: 'number',\r\n                'aria-labelledby': 'hidden-unit-slider',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </MarginedContainer>\r\n      <MarginedContainer>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleBuildButtonClick}>\r\n          Build Model\r\n        </Button>\r\n      </MarginedContainer>\r\n      {\r\n        model ? \r\n        <MarginedContainer>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleVisualiseModelButtonClick}>\r\n                  Visualise\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" \r\n                        onClick={handleTrainModelButtonClick}\r\n                        disabled={isTraining}>\r\n                  Train Model\r\n                </Button>\r\n              </Grid>\r\n              {\r\n                isTraining ? \r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"secondary\"\r\n                    onClick={handleStopTrainingButtonClick}>\r\n                    Stop training\r\n                  </Button>\r\n                </Grid> : null\r\n              }\r\n             \r\n            </Grid>\r\n        </MarginedContainer> : null\r\n      }\r\n      <MarginedContainer ref={modelP5Parent}>\r\n        <></>\r\n      </MarginedContainer>\r\n    </>\r\n  )\r\n  return <TwoColumnsGrid left={left} right={right} />;\r\n}","import * as tfvis from '@tensorflow/tfjs-vis';\r\n\r\nexport default function createVisor() {\r\n    const visor = tfvis.visor();\r\n    visor.el.style.position = \"absolute\";\r\n    visor.el.style.zIndex = 2000;\r\n    visor.el.children[0].style.maxWidth=\"100%\";\r\n    visor.close();\r\n}","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport TextureIcon from '@material-ui/icons/Texture';\r\n\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Home, ElemCA } from \"./components\";\r\nimport { createVisor } from './helper';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(createVisor);\r\n\r\n    const handleDrawerOpen = (e) => {\r\n        e.preventDefault();\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = (e) => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        CA-ML Webapp Demo\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    <ListItem button key=\"Intro\" component={Link} to=\"/\">\r\n                        <ListItemIcon> <InfoIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Introduction\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"elementary\" component={Link} to=\"/elementary\">\r\n                        <ListItemIcon> <LooksOneIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Elementary CA\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"gol\">\r\n                        <ListItemIcon> <BugReportIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Game of Life\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"texture_synthesis\">\r\n                        <ListItemIcon> <TextureIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Texture Synthesis\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={() => <Home />} />\r\n                    <Route exact path=\"/elementary\" component={() => <ElemCA />} />\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}