{"version":3,"sources":["components/TwoColumnsGrid.jsx","components/Home.jsx","components/ElemCAtfjs.js","components/MarginedContainer.jsx","components/ElemCARuleCell.jsx","components/ElemCARuleController.jsx","components/ElemCAp5.js","components/ElemCA.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","TwoColumnsGrid","props","classes","className","Grid","container","item","xs","sm","Paper","left","right","Home","alt","style","maxWidth","src","trainXs","Array","keys","reverse","map","x","toString","padStart","split","Number","tf","styled","Container","marginBottom","image","position","flexDirection","zIndex","ElemCARuleCell","onPic","id","offPic","cellToggle","toggle","ButtonBase","focusRipple","focusVisibleClassName","focusVisible","index","undefined","onClick","Typography","variant","buttonIds","ElemCARuleController","ruleNum","setRuleNum","useState","error","setError","fill","toggles","setToggles","elemP5Parent","useRef","canvas","setCanvas","handleCellClick","event","t","currentTarget","newToggles","parseInt","getAttribute","reduce","total","i","togglesToNum","MarginedContainer","TextField","label","type","value","onChange","input","target","isNaN","helperText","Button","remove","parent","n","p5","sketch","CA","this","w","Math","floor","width","cells","length","generation","ruleset","generate","nextgen","me","rules","display","noStroke","rect","a","b","c","ca","setup","createCanvas","offsetWidth","resizeCanvas","background","draw","height","windowResized","ElemCAp5","current","ref","ElemCA","hiddenLayerUnits","setHiddenLayerUnits","console","log","visor","tfvis","el","open","gutterBottom","justify","Slider","newValue","aria-labelledby","min","max","Input","margin","onBlur","inputProps","model","add","inputLayer","inputShape","dense","units","activation","optimizer","adam","compile","loss","metrics","catf","data","predict","dataSync","drawerWidth","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","App","useTheme","React","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","direction","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8822392.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction TwoColumnsGrid(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>\r\n          \r\n            {props.left}\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>\r\n\r\n            {props.right}\r\n            \r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TwoColumnsGrid;","\r\nimport React from \"react\";\r\nimport TwoColumnsGrid from './TwoColumnsGrid'\r\n\r\nexport default function Home() {\r\n  const left = (\r\n    <>\r\n      <h1>Cellular Automata</h1>\r\n      <img alt=\"\" style={{ maxWidth: '100%' }} src='https://miro.medium.com/max/1024/1*pNLSLasaYXb9wgBPpGXZSw.gif' />\r\n    </>\r\n  )\r\n  const right = (\r\n    <>\r\n      <h1>Machine Learning</h1>\r\n      <img alt=\"\" style={{ maxWidth: '100%' }} src=\"https://miro.medium.com/max/3000/1*n3TBO5i8hrYAujlhiHoE_w.gif\" />\r\n    </>\r\n  )\r\n  return <TwoColumnsGrid left={left} right={right}/>;\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\n\r\nexport function getModel(hiddenLayerUnits) {\r\n    const model = tf.sequential();\r\n    const INPUT_SIZE = 3;\r\n\r\n    model.add(tf.layers.inputLayer({ inputShape: [INPUT_SIZE] }));\r\n    if (hiddenLayerUnits > 0) {\r\n        model.add(tf.layers.dense({\r\n            units: hiddenLayerUnits,\r\n            activation: 'relu'\r\n        }));\r\n    }\r\n\r\n    model.add(tf.layers.dense({\r\n        units: 1,\r\n        activation: 'sigmoid'\r\n    }))\r\n    \r\n    // Choose an optimizer, loss function and accuracy metric,\r\n    // then compile and return the model\r\n    const optimizer = tf.train.adam();\r\n    model.compile({\r\n        optimizer: optimizer,\r\n        loss: 'binaryCrossentropy',\r\n        metrics: ['accuracy'],\r\n    });\r\n\r\n    return model;\r\n}\r\n\r\nlet trainXs = [...Array(8).keys()].reverse().map(x => {\r\n    return x.toString(2).padStart(3, '0');\r\n})\r\n\r\ntrainXs = trainXs.map(x => {\r\n    return x.split(\"\").map(Number);\r\n})\r\n\r\ntrainXs = tf.stack(trainXs);\r\n\r\nexport async function train(model, caRuleNum) {\r\n    const metrics = ['loss', 'val_loss', 'acc', 'val_acc'];\r\n    const container = {\r\n        name: 'Model Training', tab: 'Model', styles: { height: '1000px' }\r\n    };\r\n    const fitCallbacks = tfvis.show.fitCallbacks(container, metrics);\r\n\r\n    const trainYs = caRuleNum.toString(2).padStart(8, '0').split(\"\").map(Number);\r\n\r\n    return model.fit(trainXs, trainYs, {\r\n        epochs: 100,\r\n        callbacks: fitCallbacks\r\n    });\r\n}\r\n\r\nexport function doPrediction(model, data, testDataSize = 500) {\r\n    let preds = model.predict(trainXs).dataSync();\r\n    return preds.map(x => Number(x > 0.5));\r\n}\r\n\r\n// async function showAccuracy(model, data) {\r\n//     const [preds, labels] = doPrediction(model, data);\r\n//     const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\r\n//     const container = { name: 'Accuracy', tab: 'Evaluation' };\r\n//     tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\r\n\r\n//     labels.dispose();\r\n// }\r\n\r\n// async function showConfusion(model, data) {\r\n//     const [preds, labels] = doPrediction(model, data);\r\n//     const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\r\n//     const container = { name: 'Confusion Matrix', tab: 'Evaluation' };\r\n//     tfvis.render.confusionMatrix(container, { values: confusionMatrix, tickLabels: classNames });\r\n\r\n//     labels.dispose();\r\n// }\r\n","import { styled } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport default styled(Container)({\r\n    maxWidth: '100%',\r\n    marginBottom: 20,\r\n});","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ButtonBase, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        '&:hover': {\r\n            zIndex: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ElemCARuleCell(props) {\r\n    const onPic = 'caButtons/' + props.id + 'on.png';\r\n    const offPic = 'caButtons/' + props.id + 'off.png';\r\n    const cellToggle = props.toggle;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n            id={props.id}\r\n            index={props.index}\r\n            toggle={props.toggle ? 1 : undefined}\r\n            onClick={props.onClick}\r\n        >\r\n            <img src={cellToggle ? onPic : offPic} alt={props.id + \" state\"}/>\r\n            <br/>\r\n            <Typography variant=\"button\"> {cellToggle ? 1 : 0} </Typography>\r\n        </ButtonBase>\r\n    )\r\n} ","import React, { useState, useRef } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport MarginedContainer from './MarginedContainer';\r\nimport ElemCARuleCell from './ElemCARuleCell';\r\nimport ElemCAp5 from './ElemCAp5'\r\n\r\nconst buttonIds = [...Array(8).keys()].reverse().map(x => {\r\n    return x.toString(2).padStart(3, '0');\r\n})\r\n\r\nconst numToToggles = (num) => {\r\n    const numList = num.toString(2).padStart(8, '0').split('');\r\n    return numList.map(x => !!parseInt(x));\r\n}\r\n\r\nconst togglesToNum = (toggles) => {\r\n    const t = [...toggles]\r\n    return t.reverse().reduce((total, t, i) => {\r\n        return total += t * 2 ** i;\r\n    }, 0);\r\n}\r\n\r\nexport default function ElemCARuleController(props) {\r\n    const ruleNum = props.ruleNum;\r\n    const setRuleNum = props.setRuleNum;\r\n    const [error, setError] = useState(false);\r\n    const [toggles, setToggles] = useState([...Array(8).fill(false)])\r\n    const elemP5Parent = useRef(null);\r\n    const [canvas, setCanvas] = useState(null);\r\n\r\n    const handleRuleNumChange = event => {\r\n        let input = event.target.value\r\n        \r\n        if (isNaN(input)) {\r\n            setError(true);\r\n        } else {\r\n            input = parseInt(input)\r\n            if (input < 0 || input > 255) setError(true);\r\n            else {\r\n                setError(false);\r\n                setRuleNum(input);\r\n                setToggles(numToToggles(input));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCellClick = event => {\r\n        const t = event.currentTarget;\r\n        const newToggles = [...toggles];\r\n        newToggles[parseInt(t.getAttribute('index'))] = !t.getAttribute('toggle');\r\n\r\n        setToggles(newToggles);\r\n        setRuleNum(togglesToNum(newToggles));\r\n    }\r\n\r\n    const handleRenderButtonClick = event => {\r\n        if (canvas) canvas.remove();\r\n        setCanvas(ElemCAp5(elemP5Parent.current, ruleNum));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MarginedContainer>\r\n                {buttonIds.map((id, index) => (\r\n                    <ElemCARuleCell id={id}\r\n                        key={index}\r\n                        index={index}\r\n                        toggle={toggles[index] ? 1 : undefined}\r\n                        onClick={handleCellClick}>\r\n                    </ElemCARuleCell>\r\n                ))}\r\n            </MarginedContainer>\r\n\r\n            <MarginedContainer>\r\n                <TextField\r\n                    error={error}\r\n                    id=\"rule-num-inpput\"\r\n                    label=\"Rule Number\"\r\n                    type=\"number\"\r\n                    value={ruleNum}\r\n                    variant=\"outlined\"\r\n                    onChange={handleRuleNumChange}\r\n                    helperText={error ? \"Only number between 0 and 255 allowed!\" : \"\"}\r\n                />\r\n            </MarginedContainer>\r\n            <MarginedContainer>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleRenderButtonClick}>\r\n                    Render\r\n                </Button>\r\n            </MarginedContainer>\r\n            <MarginedContainer ref={elemP5Parent}>\r\n                <></>\r\n            </MarginedContainer> \r\n        </>\r\n    )\r\n}","import p5 from 'p5';\r\n\r\nexport default function ElemCAp5(parent, ruleNum) {\r\n    const n = 64;\r\n    const s = (sketch) => {\r\n        function CA(ruleNum) {\r\n            this.w = Math.floor(sketch.width / n);\r\n            this.cells = new Array(n);\r\n            for (let i = 0; i < this.cells.length; i++) {\r\n                this.cells[i] = 0;\r\n            }\r\n            // We arbitrarily start with just the middle cell having a state of \"1\"\r\n            this.cells[this.cells.length / 2] = 1;\r\n            this.generation = 0;\r\n            this.ruleset = ruleNum.toString(2).padStart(8, '0').split('').map(x => parseInt(x));\r\n\r\n            this.generate = () => {\r\n                // First we create an empty array filled with 0s for the new values\r\n                var nextgen = [];\r\n                for (let i = 0; i < this.cells.length; i++) {\r\n                    nextgen[i] = 0;\r\n                }\r\n                // For every spot, determine new state by examing current state, and neighbor states\r\n                // Ignore edges that only have one neighor\r\n                for (let i = 1; i < this.cells.length - 1; i++) {\r\n                    var left = this.cells[i - 1];   // Left neighbor state\r\n                    var me = this.cells[i];     // Current state\r\n                    var right = this.cells[i + 1];   // Right neighbor state\r\n                    nextgen[i] = this.rules(left, me, right); // Compute next generation state based on ruleset\r\n                }\r\n                // The current generation is the new generation\r\n                this.cells = nextgen;\r\n                this.generation++;\r\n            };\r\n\r\n            this.display = function () {\r\n                for (var i = 0; i < this.cells.length; i++) {\r\n                    if (this.cells[i] === 1) sketch.fill(200);\r\n                    else sketch.fill(51);\r\n                    sketch.noStroke();\r\n                    sketch.rect(i * this.w, this.generation * this.w, this.w, this.w);\r\n                }\r\n            };\r\n\r\n            this.rules = function (a, b, c) {\r\n                if (a === 1 && b === 1 && c === 1) return this.ruleset[0];\r\n                if (a === 1 && b === 1 && c === 0) return this.ruleset[1];\r\n                if (a === 1 && b === 0 && c === 1) return this.ruleset[2];\r\n                if (a === 1 && b === 0 && c === 0) return this.ruleset[3];\r\n                if (a === 0 && b === 1 && c === 1) return this.ruleset[4];\r\n                if (a === 0 && b === 1 && c === 0) return this.ruleset[5];\r\n                if (a === 0 && b === 0 && c === 1) return this.ruleset[6];\r\n                if (a === 0 && b === 0 && c === 0) return this.ruleset[7];\r\n                return 0;\r\n            };\r\n        }\r\n\r\n        // let x = 100;\r\n        // let y = 100;\r\n\r\n        let ca;\r\n        sketch.setup = () => {\r\n            sketch.createCanvas(0.8 * parent.offsetWidth, 0.8 * parent.offsetWidth);\r\n            ca = new CA(ruleNum);\r\n            sketch.resizeCanvas(n * ca.w, n * ca.w);\r\n            sketch.background(0);\r\n        };\r\n\r\n        sketch.draw = () => {\r\n            ca.display();\r\n            if (ca.generation < sketch.height / ca.w) {\r\n                ca.generate();\r\n            }\r\n        };\r\n\r\n        sketch.windowResized = () => {\r\n            sketch.resizeCanvas(0.8 * parent.offsetWidth, 0.8 * parent.offsetWidth);\r\n            ca = new CA(ruleNum);\r\n            sketch.resizeCanvas(n * ca.w, n * ca.w);\r\n            sketch.background(0);\r\n        }\r\n    };\r\n\r\n    let elemp5 = new p5(s, parent);\r\n    return elemp5;\r\n}","\r\nimport React, { useState } from \"react\";\r\nimport { Button, Typography, Slider, Input, Grid } from \"@material-ui/core\";\r\nimport * as tfvis from \"@tensorflow/tfjs-vis\"\r\nimport * as catf from \"./ElemCAtfjs\";\r\n\r\nimport TwoColumnsGrid from './TwoColumnsGrid';\r\nimport MarginedContainer from './MarginedContainer';\r\nimport ElemCARuleController from './ElemCARuleController';\r\n\r\nexport default function ElemCA() {\r\n  const [ruleNum, setRuleNum] = useState(0);\r\n  const [hiddenLayerUnits, setHiddenLayerUnits] = useState(0);\r\n\r\n  const handleVisorButtonClick = event => {\r\n    console.log(event.currentTarget);\r\n    const visor = tfvis.visor();\r\n    tfvis.visor().el.style.position = \"absolute\";\r\n    tfvis.visor().el.style.zIndex = 2000;\r\n    if (visor) {\r\n      tfvis.visor().open();\r\n    }\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    if (hiddenLayerUnits < 0) {\r\n      setHiddenLayerUnits(0);\r\n    } else if (hiddenLayerUnits > 32) {\r\n      setHiddenLayerUnits(32);\r\n    }\r\n  };\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setHiddenLayerUnits(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setHiddenLayerUnits(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBuildButtonClick = (event) => {\r\n    let model = catf.getModel(hiddenLayerUnits);\r\n    console.log(catf.doPrediction(model));\r\n  };\r\n\r\n  const left = (\r\n    <>\r\n      <ElemCARuleController ruleNum={ruleNum} setRuleNum={setRuleNum} />\r\n    </>\r\n  )\r\n  const right = (\r\n    <>\r\n      <MarginedContainer>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleVisorButtonClick}>\r\n          Show training progress\r\n        </Button>\r\n      </MarginedContainer>\r\n      <MarginedContainer>\r\n        <Typography id=\"hidden-unit-slider\" gutterBottom>\r\n          Units in hidden layer\r\n        </Typography>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item>\r\n            <Slider\r\n              value={typeof hiddenLayerUnits === 'number' ? hiddenLayerUnits : 0}\r\n              onChange={handleSliderChange}\r\n              aria-labelledby=\"hidden-unit-slider\"\r\n              style={{ width: 64 }}\r\n              min={0}\r\n              max={32}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              value={hiddenLayerUnits}\r\n              margin=\"dense\"\r\n              onChange={handleInputChange}\r\n              onBlur={handleBlur}\r\n              inputProps={{\r\n                min: 0,\r\n                max: 32,\r\n                type: 'number',\r\n                'aria-labelledby': 'hidden-unit-slider',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </MarginedContainer>\r\n      <MarginedContainer>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleBuildButtonClick}>\r\n          Build Model\r\n        </Button>\r\n      </MarginedContainer>\r\n    </>\r\n  )\r\n  return <TwoColumnsGrid left={left} right={right} />;\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport TextureIcon from '@material-ui/icons/Texture';\r\n\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Home, ElemCA } from \"./components\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        CA-ML Webapp Demo\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    <ListItem button key=\"Intro\" component={Link} to=\"/ca-ml-webapp/\">\r\n                        <ListItemIcon> <InfoIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Introduction\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"elementary\" component={Link} to=\"/ca-ml-webapp/elementary\">\r\n                        <ListItemIcon> <LooksOneIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Elementary CA\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"gol\">\r\n                        <ListItemIcon> <BugReportIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Game of Life\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"texture_synthesis\">\r\n                        <ListItemIcon> <TextureIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Texture Synthesis\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Switch>\r\n                    <Route exact path=\"/ca-ml-webapp/\" component={() => <Home />} />\r\n                    <Route exact path=\"/ca-ml-webapp/elementary\" component={() => <ElemCA />} />\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}