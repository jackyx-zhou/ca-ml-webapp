{"version":3,"sources":["components/MainTextBox.jsx","components/TwoColumnsGrid.jsx","components/Home.jsx","components/MarginedContainer.jsx","components/ElemCA/ElemCARuleCell.jsx","components/ElemCA/ElemCAp5.js","components/ElemCA/ElemCARuleController.jsx","components/ElemCA/ElemCAtfjs.js","components/ElemCA/ElemCAML.jsx","components/ElemCA.jsx","components/GoL.jsx","components/Texture.jsx","helper/createVisor.js","App.js","reportWebVitals.js","index.js"],"names":["MainTextBox","props","Typography","variant","paragraph","Box","fontWeight","textAlign","px","children","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","color","palette","text","secondary","TwoColumnsGrid","classes","className","Grid","container","item","xs","sm","Paper","left","right","Home","gutterBottom","alt","style","maxWidth","src","href","styled","Container","marginBottom","image","position","flexDirection","zIndex","ElemCARuleCell","onPic","process","id","offPic","cellToggle","toggle","ButtonBase","focusRipple","focusVisibleClassName","focusVisible","index","undefined","onClick","ElemCAp5","parent","ruleNum","n","p5","sketch","CA","this","w","Math","floor","width","cells","Array","i","length","generation","ruleset","toString","padStart","split","map","x","parseInt","generate","nextgen","me","rules","display","fill","noStroke","rect","a","b","c","ca","setup","createCanvas","offsetWidth","resizeCanvas","background","draw","height","windowResized","buttonIds","keys","reverse","ElemCARuleController","setRuleNum","useState","error","setError","toggles","setToggles","elemP5Parent","useRef","canvas","setCanvas","handleCellClick","event","t","currentTarget","newToggles","getAttribute","reduce","total","togglesToNum","MarginedContainer","TextField","label","type","value","onChange","input","target","isNaN","helperText","Button","remove","current","ref","trainXs","model","caRuleNum","metrics","name","tab","fitCallbacks","tfvis","onEpochEnd","epoch","logs","stopTraining","trainYs","Number","tf","fit","epochs","callbacks","ElemCAML","hiddenLayerUnits","setHiddenLayerUnits","setModel","isTraining","setIsTraining","modelP5Parent","surface1","surface2","surface3","open","justify","Slider","newValue","aria-labelledby","min","max","Input","margin","onBlur","inputProps","m","add","inputLayer","inputShape","dense","units","activation","optimizer","sgd","compile","loss","catf","modelSummary","layer","getLayer","predRule","data","predict","dataSync","console","log","then","disabled","ElemCA","GoL","Texture","createVisor","visor","el","close","drawerWidth","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","App","useTheme","setOpen","useEffect","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","e","preventDefault","edge","noWrap","Drawer","direction","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+nBAGe,SAASA,EAAYC,GAChC,OACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,WAAS,EAArC,SACI,cAACC,EAAA,EAAD,CAAKC,WAAW,mBAAmBC,UAAU,OAAOC,GAAG,KAAvD,SACKP,EAAMQ,a,sBCDjBC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAASJ,EAAMK,QAAQ,GACvBV,UAAW,SACXW,MAAON,EAAMO,QAAQC,KAAKC,eA6BfC,MAzBf,SAAwBrB,GACtB,IAAMsB,EAAUb,IAEhB,OACE,qBAAKc,UAAWD,EAAQV,KAAxB,SACE,eAACY,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,EAAzB,UACE,cAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CAAON,UAAWD,EAAQR,MAA1B,SAEGd,EAAM8B,SAIX,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,CAAON,UAAWD,EAAQR,MAA1B,SAEGd,EAAM+B,gBC5BJ,SAASC,IACtB,IAAMF,EACJ,qCACE,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK+B,cAAY,EAArC,+BACA,eAAClC,EAAD,4NAG8B,0EAH9B,8EAI2E,uBAAM,uBAJjF,ylBAgBA,qBAAKmC,IAAI,GAAGC,MAAO,CAAEC,SAAU,QAAUC,IAAI,qEAG3CN,EACJ,qCACE,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAAK+B,cAAY,EAArC,8BACA,eAAClC,EAAD,2MAC+L,uBAC7L,mCACE,uBADF,2VAE0V,uBACxV,0BALJ,sDAOqD,mBAAGuC,KAAK,uCAAR,8CAPrD,sOASA,qBAAKJ,IAAI,GAAGC,MAAO,CAAEC,SAAU,OAASC,IAAI,qEAGhD,OAAO,cAAC,EAAD,CAAgBP,KAAMA,EAAMC,MAAOA,I,gDCxC7BQ,cAAOC,IAAPD,CAAkB,CAC7BH,SAAU,OACVK,aAAc,K,UCDZhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+B,MAAO,CACHC,SAAU,WACVC,cAAe,SACf,UAAW,CACPC,OAAQ,QAKL,SAASC,GAAe9C,GACnC,IAAM+C,EAAQC,2BAAyChD,EAAMiD,GAAK,SAC5DC,EAASF,2BAAyChD,EAAMiD,GAAK,UAC7DE,EAAanD,EAAMoD,OAEnB9B,EAAUb,KAChB,OACI,eAAC4C,GAAA,EAAD,CACIC,aAAW,EACX/B,UAAWD,EAAQoB,MACnBa,sBAAuBjC,EAAQkC,aAC/BP,GAAIjD,EAAMiD,GACVQ,MAAOzD,EAAMyD,MACbL,OAAQpD,EAAMoD,OAAS,OAAIM,EAC3BC,QAAS3D,EAAM2D,QAPnB,UASI,qBAAKtB,IAAKc,EAAaJ,EAAQG,EAAQhB,IAAKlC,EAAMiD,GAAK,WACvD,uBACA,eAAChD,EAAA,EAAD,CAAYC,QAAQ,SAApB,cAA+BiD,EAAa,EAAI,EAAhD,U,yBC9BG,SAASS,GAASC,EAAQC,GACrC,IAAMC,EAAI,GAiFV,OADa,IAAIC,MA/EP,SAACC,GACP,SAASC,EAAGJ,GAAU,IAAD,OACjBK,KAAKC,EAAIC,KAAKC,MAAML,EAAOM,MAAQR,GACnCI,KAAKK,MAAQ,IAAIC,MAAMV,GACvB,IAAK,IAAIW,EAAI,EAAGA,EAAIP,KAAKK,MAAMG,OAAQD,IACnCP,KAAKK,MAAME,GAAK,EAGpBP,KAAKK,MAAML,KAAKK,MAAMG,OAAS,GAAK,EACpCR,KAAKS,WAAa,EAClBT,KAAKU,QAAUf,EAAQgB,SAAS,GAAGC,SAAS,EAAG,KAAKC,MAAM,IAAIC,KAAI,SAAAC,GAAC,OAAIC,SAASD,MAEhFf,KAAKiB,SAAW,WAGZ,IADA,IAAIC,EAAU,GACLX,EAAI,EAAGA,EAAI,EAAKF,MAAMG,OAAQD,IACnCW,EAAQX,GAAK,EAIjB,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAKF,MAAMG,OAAS,EAAGD,IAAK,CAC5C,IAAI5C,EAAO,EAAK0C,MAAME,EAAI,GACtBY,EAAK,EAAKd,MAAME,GAChB3C,EAAQ,EAAKyC,MAAME,EAAI,GAC3BW,EAAQX,GAAK,EAAKa,MAAMzD,EAAMwD,EAAIvD,GAGtC,EAAKyC,MAAQa,EACb,EAAKT,cAGTT,KAAKqB,QAAU,WACX,IAAK,IAAId,EAAI,EAAGA,EAAIP,KAAKK,MAAMG,OAAQD,IACb,IAAlBP,KAAKK,MAAME,GAAUT,EAAOwB,KAAK,KAChCxB,EAAOwB,KAAK,IACjBxB,EAAOyB,WACPzB,EAAO0B,KAAKjB,EAAIP,KAAKC,EAAGD,KAAKS,WAAaT,KAAKC,EAAGD,KAAKC,EAAGD,KAAKC,IAIvED,KAAKoB,MAAQ,SAAUK,EAAGC,EAAGC,GACzB,OAAU,IAANF,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAC7C,IAANe,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAC7C,IAANe,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAC7C,IAANe,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAC7C,IAANe,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAC7C,IAANe,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAC7C,IAANe,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAC7C,IAANe,GAAiB,IAANC,GAAiB,IAANC,EAAgB3B,KAAKU,QAAQ,GAChD,GAOf,IAAIkB,EACJ9B,EAAO+B,MAAQ,WACX/B,EAAOgC,aAAa,GAAMpC,EAAOqC,YAAa,GAAMrC,EAAOqC,aAC3DH,EAAK,IAAI7B,EAAGJ,GACZG,EAAOkC,aAAapC,EAAIgC,EAAG3B,EAAGL,EAAIgC,EAAG3B,GACrCH,EAAOmC,WAAW,IAGtBnC,EAAOoC,KAAO,WACVN,EAAGP,UACCO,EAAGnB,WAAaX,EAAOqC,OAASP,EAAG3B,GACnC2B,EAAGX,YAIXnB,EAAOsC,cAAgB,WACnBtC,EAAOkC,aAAa,GAAMtC,EAAOqC,YAAa,GAAMrC,EAAOqC,aAC3DH,EAAK,IAAI7B,EAAGJ,GACZG,EAAOkC,aAAapC,EAAIgC,EAAG3B,EAAGL,EAAIgC,EAAG3B,GACrCH,EAAOmC,WAAW,MAIHvC,GC7E3B,IAAM2C,GAAY,YAAI/B,MAAM,GAAGgC,QAAQC,UAAUzB,KAAI,SAAAC,GACjD,OAAOA,EAAEJ,SAAS,GAAGC,SAAS,EAAG,QAetB,SAAS4B,GAAqB3G,GACzC,IAAM8D,EAAU9D,EAAM8D,QAChB8C,EAAa5G,EAAM4G,WAFuB,EAGtBC,oBAAS,GAHa,mBAGzCC,EAHyC,KAGlCC,EAHkC,OAIlBF,mBAAS,YAAIpC,MAAM,GAAGgB,MAAK,KAJT,mBAIzCuB,EAJyC,KAIhCC,EAJgC,KAK1CC,EAAeC,iBAAO,MALoB,EAMpBN,mBAAS,MANW,mBAMzCO,EANyC,KAMjCC,EANiC,KAwB1CC,EAAkB,SAAAC,GACpB,IAAMC,EAAID,EAAME,cACVC,EAAU,YAAOV,GACvBU,EAAWvC,SAASqC,EAAEG,aAAa,YAAcH,EAAEG,aAAa,UAEhEV,EAAWS,GACXd,EArCa,SAACI,GAElB,OADO,YAAOA,GACLN,UAAUkB,QAAO,SAACC,EAAOL,EAAG9C,GACjC,OAAOmD,EAASL,EAAC,SAAG,EAAK9C,KAC1B,GAiCYoD,CAAaJ,KAQ5B,OACI,qCACI,cAACK,EAAD,UACKvB,GAAUvB,KAAI,SAAChC,EAAIQ,GAAL,OACX,cAACX,GAAD,CAAgBG,GAAIA,EAEhBQ,MAAOA,EACPL,OAAQ4D,EAAQvD,GAAS,OAAIC,EAC7BC,QAAS2D,GAHJ7D,QAQjB,cAACsE,EAAD,UACI,cAACC,EAAA,EAAD,CACIlB,MAAOA,EACP7D,GAAG,kBACHgF,MAAM,cACNC,KAAK,SACLC,MAAOrE,EACP5D,QAAQ,WACRkI,SAnDY,SAAAb,GACxB,IAAIc,EAAQd,EAAMe,OAAOH,MAErBI,MAAMF,KAGNA,EAAQlD,SAASkD,IACL,GAAKA,EAAQ,IAHzBtB,GAAS,IAKLA,GAAS,GACTH,EAAWyB,GACXpB,EAAwBoB,EA9BhBvD,SAAS,GAAGC,SAAS,EAAG,KAAKC,MAAM,IACxCC,KAAI,SAAAC,GAAC,QAAMC,SAASD,SAsEnBsD,WAAY1B,EAAQ,yCACA,+BAG5B,cAACiB,EAAD,UACI,cAACU,EAAA,EAAD,CAAQvI,QAAQ,YAAYe,MAAM,UAAU0C,QAhCxB,SAAA4D,GACxBH,GAAQA,EAAOsB,SACnBrB,EAAUzD,GAASsD,EAAayB,QAAS7E,KA8BjC,yBAIJ,cAACiE,EAAD,CAAmBa,IAAK1B,EAAxB,SACI,kC,wECzFZ2B,GAAU,YAAIpE,MAAM,GAAGgC,QAAQC,UAAUzB,KAAI,SAAAC,GAC7C,OAAOA,EAAEJ,SAAS,GAAGC,SAAS,EAAG,Q,gDAsC9B,WAAqB+D,EAAOC,GAA5B,sBAAAnD,EAAA,6DACGoD,EAAU,CAAC,OAAQ,OACnBvH,EAAY,CACdwH,KAAM,iBAAkBC,IAAK,SAE3BC,EALH,2BAKsBC,QAAWD,aAAa1H,EAAWuH,IALzD,IAMCK,WAAY,SAACC,EAAOC,GACZA,EAAI,IAAU,KAAKT,EAAMU,cAAe,MAGhDC,EAAUV,EAAUjE,SAAS,GAAGC,SAAS,EAAG,KAAKC,MAAM,IAAIC,IAAIyE,QACnED,EAAUE,KAASF,GAXhB,kBAaIX,EAAMc,IAAIf,GAASY,EAAS,CAC/BI,OAAQ,IACRC,UAAWX,KAfZ,4C,sBCjCQ,SAASY,GAAS/J,GAC/B,IAAM8D,EAAU9D,EAAM8D,QADgB,EAEU+C,mBAAS,GAFnB,mBAE/BmD,EAF+B,KAEbC,EAFa,OAGZpD,mBAAS,MAHG,mBAG/BiC,EAH+B,KAGxBoB,EAHwB,OAIFrD,oBAAS,GAJP,mBAI/BsD,EAJ+B,KAInBC,EAJmB,KAKhCC,EAAgBlD,iBAAO,MALS,EAMVN,mBAAS,MANC,mBAM/BO,EAN+B,KAMvBC,EANuB,KAQhCiD,EAAW,CAAErB,KAAM,gBAAiBC,IAAK,SACzCqB,EAAW,CAAEtB,KAAM,uBAAwBC,IAAK,SAChDsB,EAAW,CAAEvB,KAAM,qCAAsCC,IAAK,SAqDpE,OACE,qCACE,cAACnB,EAAD,UACE,cAACU,EAAA,EAAD,CAAQvI,QAAQ,YAAYe,MAAM,YAAY0C,QAtDrB,SAAA4D,GAC7B6B,WAAcqB,QAqDV,qCAIF,eAAC1C,EAAD,WACE,cAAC9H,EAAA,EAAD,CAAYgD,GAAG,qBAAqBhB,cAAY,EAAhD,mCAGA,eAACT,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,EAAG0J,QAAQ,SAApC,UACE,cAAClJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACiJ,GAAA,EAAD,CACExC,MAAmC,kBAArB6B,EAAgCA,EAAmB,EACjE5B,SAtDe,SAACb,EAAOqD,GACjCX,EAAoBW,IAsDVC,kBAAgB,qBAChB1I,MAAO,CAAEoC,MAAO,IAChBuG,IAAK,EACLC,IAAK,OAGT,cAACvJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACsJ,GAAA,EAAD,CACE7C,MAAO6B,EACPiB,OAAO,QACP7C,SA7Dc,SAAAb,GACxB0C,EAA2C,KAAvB1C,EAAMe,OAAOH,MAAe,GAAKuB,OAAOnC,EAAMe,OAAOH,SA6D/D+C,OA1EO,WACblB,EAAmB,EACrBC,EAAoB,GACXD,EAAmB,IAC5BC,EAAoB,KAuEZkB,WAAY,CACVL,IAAK,EACLC,IAAK,GACL7C,KAAM,SACN,kBAAmB,0BAIzB,cAAC1G,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC+G,EAAA,EAAD,CAAQvI,QAAQ,YAAYe,MAAM,UAAU0C,QApEvB,SAAC4D,GAC9B,IAAI6D,ED7BD,SAAkBpB,GACrB,IAAMlB,EAAQa,OAGdb,EAAMuC,IAAI1B,KAAU2B,WAAW,CAAEC,WAAY,CAF1B,MAGfvB,EAAmB,GACnBlB,EAAMuC,IAAI1B,KAAU6B,MAAM,CACtBC,MAAOzB,EACP0B,WAAY,UAIpB5C,EAAMuC,IAAI1B,KAAU6B,MAAM,CACtBC,MAAO,EACPC,WAAY,aAKhB,IAAMC,EAAYhC,KAASiC,IAAI,IAO/B,OANA9C,EAAM+C,QAAQ,CACVF,UAAWA,EACXG,KAAM,qBACN9C,QAAS,CAAC,cAGPF,ECGCiD,CAAc/B,GACtBZ,QAAW4C,aAAa1B,EAAUc,GAClChC,QAAW6C,MAAM1B,EAAUa,EAAEc,cAASxI,EAAW,IACjD0F,WAAcqB,OACdP,EAASkB,IA+DD,iCAOJtC,EACA,cAACf,EAAD,UACI,eAACvG,EAAA,EAAD,CAAMC,WAAS,EAACT,QAAS,EAAG0J,QAAQ,SAApC,UACE,cAAClJ,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC+G,EAAA,EAAD,CAAQvI,QAAQ,YAAYe,MAAM,UAAU0C,QAxDlB,SAAC4D,GACvC,IAAI4E,EDJD,SAAsBrD,EAAOsD,GAEhC,OADYtD,EAAMuD,QAAQxD,IAASyD,WACtBrH,KAAI,SAAAC,GAAC,OAAIwE,OAAOxE,EAAI,OCElB6G,CAAkBjD,GAAOpC,UAAUkB,QAAO,SAACC,EAAOL,EAAG9C,GAClE,OAAOmD,EAASL,EAAC,SAAG,EAAK9C,KACxB,GACH6H,QAAQC,IAAIL,GACR/E,GAAQA,EAAOsB,SACnBrB,EAAUzD,GAASyG,EAAc1B,QAASwD,KAkD9B,yBAIF,cAAC3K,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC+G,EAAA,EAAD,CAAQvI,QAAQ,YAAYe,MAAM,UAC1B0C,QA7Ec,SAAA4D,IDP/B,SAAP,sCCQIwE,CAAWjD,EAAOhF,GAAS2I,MAAK,WAC9BrC,GAAc,GACdhB,QAAW6C,MAAMzB,EAAU1B,EAAMoD,cAASxI,EAAW,OAEvD0F,WAAcqB,OACdL,GAAc,IAwEMsC,SAAUvC,EAFlB,2BAOAA,EACA,cAAC3I,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC+G,EAAA,EAAD,CAAQvI,QAAQ,YAAYe,MAAM,YAChC0C,QA7EoB,SAAA4D,GACpCuB,EAAMU,cAAe,EACrBY,GAAc,GACdhB,QAAW6C,MAAM1B,EAAUzB,EAAMoD,cAASxI,EAAW,KAyEvC,6BAIQ,UAIK,KAEzB,cAACqE,EAAD,CAAmBa,IAAKyB,EAAxB,SACE,kCCxIO,SAASsC,KAAU,IAAD,EACD9F,mBAAS,GADR,mBACxB/C,EADwB,KACf8C,EADe,KAGzB9E,EACJ,qCACE,cAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAK+B,cAAY,EAArC,2BACA,eAAClC,EAAD,WACE,mBAAGuC,KAAK,6EAAR,oDADF,2JAEuE,uBAFvE,mSAKA,cAACqE,GAAD,CAAsB7C,QAASA,EAAS8C,WAAYA,OAGlD7E,EACJ,qCACE,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAAK+B,cAAY,EAArC,oCACA,eAAClC,EAAD,uUAC2T,uBAD3T,2NAIA,qBAAKmC,IAAI,YAAYC,MAAO,CAAEC,SAAU,OAASC,IAAI,2EACrD,cAAC0H,GAAD,CAAUjG,QAASA,OAGvB,OAAO,cAAC,EAAD,CAAgBhC,KAAMA,EAAMC,MAAOA,IChC7B,SAAS6K,KACtB,OAAO,qBAAK1K,IAAI,qBAChBG,IAAI,2FACJF,MAAO,CAACC,SAAU,SCHL,SAASyK,KACpB,OAAO,qBAAK3K,IAAI,qBACZG,IAAI,2FACJF,MAAO,CAAEC,SAAU,SCHZ,SAAS0K,KACpB,IAAMC,EAAQ3D,WACd2D,EAAMC,GAAG7K,MAAMQ,SAAW,WAC1BoK,EAAMC,GAAG7K,MAAMU,OAAS,IACxBkK,EAAMC,GAAGxM,SAAS,GAAG2B,MAAMC,SAAS,OACpC2K,EAAME,QLAVpE,GAAUA,GAAQ5D,KAAI,SAAAC,GAClB,OAAOA,EAAEF,MAAM,IAAIC,IAAIyE,WAG3Bb,GAAUc,KAASd,IMgBnB,IAAMqE,GAAc,IAEdzM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF4E,QAAS,QAEb2H,OAAQ,CACJtK,OAAQlC,EAAMkC,OAAOuK,OAAS,EAC9BC,WAAY1M,EAAM2M,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ7M,EAAM2M,YAAYE,OAAOC,MACjCC,SAAU/M,EAAM2M,YAAYI,SAASC,iBAG7CC,YAAa,CACTC,WAAYX,GACZ3I,MAAM,eAAD,OAAiB2I,GAAjB,OACLG,WAAY1M,EAAM2M,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ7M,EAAM2M,YAAYE,OAAOC,MACjCC,SAAU/M,EAAM2M,YAAYI,SAASI,kBAG7CC,WAAY,CACRC,YAAa,IAEjBC,KAAM,CACFzI,QAAS,QAEb4H,OAAQ,CACJ7I,MAAO2I,GACPgB,WAAY,EACZC,WAAY,UAEhBC,WAAY,CACR7J,MAAO2I,GACPG,WAAY1M,EAAM2M,YAAYC,OAAO,QAAS,CAC1CC,OAAQ7M,EAAM2M,YAAYE,OAAOC,MACjCC,SAAU/M,EAAM2M,YAAYI,SAASI,kBAG7CO,YAAY,aACRhB,WAAY1M,EAAM2M,YAAYC,OAAO,QAAS,CAC1CC,OAAQ7M,EAAM2M,YAAYE,OAAOC,MACjCC,SAAU/M,EAAM2M,YAAYI,SAASC,gBAEzCW,UAAW,SACX/J,MAAO5D,EAAMK,QAAQ,GAAK,GACzBL,EAAM4N,YAAYC,GAAG,MAAQ,CAC1BjK,MAAO5D,EAAMK,QAAQ,GAAK,IAGlCyN,QAAQ,aACJjJ,QAAS,OACTkJ,WAAY,SACZC,eAAgB,WAChB5N,QAASJ,EAAMK,QAAQ,EAAG,IAEvBL,EAAMiO,OAAOH,SAEpBI,QAAS,CACLhO,SAAU,EACVE,QAASJ,EAAMK,QAAQ,QAIhB,SAAS8N,KAAO,IAAD,IACpBxN,EAAUb,KACVE,EAAQoO,cAFY,EAGFlI,oBAAS,GAHP,mBAGnB4D,EAHmB,KAGbuE,EAHa,KAK1BC,oBAAUnC,IAYV,OACI,sBAAKvL,UAAWD,EAAQV,KAAxB,UACI,cAACsO,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACIxM,SAAS,QACTpB,UAAW6N,YAAK9N,EAAQ6L,OAAT,eACV7L,EAAQsM,YAAcnD,IAH/B,SAMI,eAAC4E,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIrO,MAAM,UACNsO,aAAW,cACX5L,QAvBK,SAAC6L,GACtBA,EAAEC,iBACFT,GAAQ,IAsBQU,KAAK,QACLnO,UAAW6N,YAAK9N,EAAQyM,WAAT,eACVzM,EAAQ2M,KAAOxD,IANxB,SASI,cAAC,IAAD,MAEJ,cAACxK,EAAA,EAAD,CAAYC,QAAQ,KAAKyP,QAAM,EAA/B,oCAKR,eAACC,EAAA,EAAD,CACI1P,QAAQ,YACRqB,UAAW6N,YAAK9N,EAAQ8L,QAAT,mBACV9L,EAAQ8M,WAAa3D,GADX,cAEVnJ,EAAQ+M,aAAe5D,GAFb,IAIfnJ,QAAS,CACLR,MAAOsO,aAAI,mBACN9N,EAAQ8M,WAAa3D,GADf,cAENnJ,EAAQ+M,aAAe5D,GAFjB,KAPnB,UAaI,qBAAKlJ,UAAWD,EAAQmN,QAAxB,SACI,cAACa,EAAA,EAAD,CAAY3L,QA7CF,SAAC6L,GACvBA,EAAEC,iBACFT,GAAQ,IA2CI,SACyB,QAApBrO,EAAMkP,UAAsB,cAAC,IAAD,IAAuB,cAAC,IAAD,QAG5D,cAACC,EAAA,EAAD,IAEA,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAaC,UAAWC,IAAMC,GAAG,IAAjD,UACI,eAACC,EAAA,EAAD,eAAe,cAAC,IAAD,IAAf,OACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,mBAFL,SAIrB,eAACP,EAAA,EAAD,CAAUC,QAAM,EAAkBC,UAAWC,IAAMC,GAAG,cAAtD,UACI,eAACC,EAAA,EAAD,eAAe,cAAC,IAAD,IAAf,OACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,oBAFL,cAIrB,eAACP,EAAA,EAAD,CAAUC,QAAM,EAAWC,UAAWC,IAAMC,GAAG,OAA/C,UACI,eAACC,EAAA,EAAD,eAAe,cAAC,IAAD,IAAf,OACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,mBAFL,OAIrB,eAACP,EAAA,EAAD,CAAUC,QAAM,EAAyBC,UAAWC,IAAMC,GAAG,WAA7D,UACI,eAACC,EAAA,EAAD,eAAe,cAAC,IAAD,IAAf,OACA,cAACC,EAAA,EAAD,CAAcC,QAAQ,wBAFL,2BAM7B,uBAAMhP,UAAWD,EAAQuN,QAAzB,UACI,qBAAKtN,UAAWD,EAAQmN,UACxB,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,IAAIP,UAAW,kBAAM,cAAClO,EAAD,OACvC,cAAC,IAAD,CAAOwO,OAAK,EAACC,KAAK,cAAcP,UAAW,kBAAM,cAACvD,GAAD,OACjD,cAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,OAAOP,UAAW,kBAAM,cAACtD,GAAD,OAC1C,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,WAAWP,UAAW,kBAAM,cAAC,GAAD,gBCnLlE,IAYeQ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACtC,GAAD,QAGJuC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.10f5f871.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nexport default function MainTextBox(props) {\r\n    return (\r\n        <Typography variant='body1' paragraph>\r\n            <Box fontWeight=\"fontWeightMedium\" textAlign=\"left\" px=\"5%\">\r\n                {props.children}\r\n            </Box>\r\n        </Typography>\r\n    );\r\n}","\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction TwoColumnsGrid(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>\r\n          \r\n            {props.left}\r\n\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paper}>\r\n\r\n            {props.right}\r\n            \r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TwoColumnsGrid;","import React from \"react\";\r\nimport { Typography } from '@material-ui/core';\r\nimport MainTextBox from './MainTextBox';\r\nimport TwoColumnsGrid from './TwoColumnsGrid';\r\n\r\nexport default function Home() {\r\n  const left = (\r\n    <>\r\n      <Typography variant='h4' gutterBottom>Cellular Automata</Typography>\r\n      <MainTextBox>\r\n        A cellular automaton is a collection of cells of a finite number of states (such as on\r\n        and off) on a grid of specified shape that evolves through a number of discrete time steps\r\n        according to a set of rules <em>based on the states of neighboring cells</em>.\r\n        The rules are then applied iteratively for as many time steps as desired.<br /><br/>\r\n\r\n        The concept was originally discovered in the 1940s by Stanislaw Ulam and John von Neumann.\r\n        It was not until the 1970s and Conway's Game of Life, a two-dimensional cellular automaton,\r\n        that interest in the subject expanded beyond academia.\r\n        In the 1980s, Stephen Wolfram engaged in a systematic study of one-dimensional cellular automata,\r\n        or what he calls elementary cellular automata;\r\n        his research assistant Matthew Cook showed that one of these rules is Turing-complete.\r\n        Wolfram published A New Kind of Science in 2002,\r\n        claiming that cellular automata have applications in many fields of science.\r\n      </MainTextBox>\r\n\r\n      <img alt=\"\" style={{ maxWidth: '100%' }} src='https://miro.medium.com/max/1024/1*pNLSLasaYXb9wgBPpGXZSw.gif' />\r\n    </>\r\n  )\r\n  const right = (\r\n    <>\r\n      <Typography variant='h4' gutterBottom>Machine Learning</Typography>\r\n      <MainTextBox>\r\n        Machine learning is an application of artificial intelligence (AI) that provides systems the ability to automatically learn and improve from experience without being explicitly programmed. <br/>\r\n        <strong>\r\n          <br />\r\n          In this project, my main aim is to try and see if cellular automata of different scale (elementary/2-dimensional) and of different complexities (single/multi-channel) can be simulated and learned by various artificial neural networks architectures, thus exploring the relationships between these two kinds of self-evolving computational models.<br/>\r\n          <br/>\r\n        </strong>\r\n        The project has been heavily inspired by the paper <a href=\"https://distill.pub/2020/growing-ca/\">Growing Neural Cellular Automata</a> by researchers at Google and Allen Discovery Center. My ultimate aim is to try and create a simple texture synthesizer that can be trained and run with low hardware requirements using the model outlined in the Google paper.\r\n      </MainTextBox>\r\n      <img alt=\"\" style={{ maxWidth: '80%' }} src=\"https://miro.medium.com/max/3000/1*n3TBO5i8hrYAujlhiHoE_w.gif\" />\r\n    </>\r\n  )\r\n  return <TwoColumnsGrid left={left} right={right} />;\r\n}","import { styled } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport default styled(Container)({\r\n    maxWidth: '100%',\r\n    marginBottom: 20,\r\n});","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ButtonBase, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        '&:hover': {\r\n            zIndex: 1,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ElemCARuleCell(props) {\r\n    const onPic = process.env.PUBLIC_URL + '/caButtons/' + props.id + 'on.png';\r\n    const offPic = process.env.PUBLIC_URL + '/caButtons/' + props.id + 'off.png';\r\n    const cellToggle = props.toggle;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <ButtonBase\r\n            focusRipple\r\n            className={classes.image}\r\n            focusVisibleClassName={classes.focusVisible}\r\n            id={props.id}\r\n            index={props.index}\r\n            toggle={props.toggle ? 1 : undefined}\r\n            onClick={props.onClick}\r\n        >\r\n            <img src={cellToggle ? onPic : offPic} alt={props.id + \" state\"}/>\r\n            <br/>\r\n            <Typography variant=\"button\"> {cellToggle ? 1 : 0} </Typography>\r\n        </ButtonBase>\r\n    )\r\n} ","import p5 from 'p5';\r\n\r\nexport default function ElemCAp5(parent, ruleNum) {\r\n    const n = 64;\r\n    const s = (sketch) => {\r\n        function CA(ruleNum) {\r\n            this.w = Math.floor(sketch.width / n);\r\n            this.cells = new Array(n);\r\n            for (let i = 0; i < this.cells.length; i++) {\r\n                this.cells[i] = 0;\r\n            }\r\n            // We arbitrarily start with just the middle cell having a state of \"1\"\r\n            this.cells[this.cells.length / 2] = 1;\r\n            this.generation = 0;\r\n            this.ruleset = ruleNum.toString(2).padStart(8, '0').split('').map(x => parseInt(x));\r\n\r\n            this.generate = () => {\r\n                // First we create an empty array filled with 0s for the new values\r\n                var nextgen = [];\r\n                for (let i = 0; i < this.cells.length; i++) {\r\n                    nextgen[i] = 0;\r\n                }\r\n                // For every spot, determine new state by examing current state, and neighbor states\r\n                // Ignore edges that only have one neighor\r\n                for (let i = 1; i < this.cells.length - 1; i++) {\r\n                    var left = this.cells[i - 1];   // Left neighbor state\r\n                    var me = this.cells[i];     // Current state\r\n                    var right = this.cells[i + 1];   // Right neighbor state\r\n                    nextgen[i] = this.rules(left, me, right); // Compute next generation state based on ruleset\r\n                }\r\n                // The current generation is the new generation\r\n                this.cells = nextgen;\r\n                this.generation++;\r\n            };\r\n\r\n            this.display = function () {\r\n                for (var i = 0; i < this.cells.length; i++) {\r\n                    if (this.cells[i] === 1) sketch.fill(200);\r\n                    else sketch.fill(51);\r\n                    sketch.noStroke();\r\n                    sketch.rect(i * this.w, this.generation * this.w, this.w, this.w);\r\n                }\r\n            };\r\n\r\n            this.rules = function (a, b, c) {\r\n                if (a === 1 && b === 1 && c === 1) return this.ruleset[0];\r\n                if (a === 1 && b === 1 && c === 0) return this.ruleset[1];\r\n                if (a === 1 && b === 0 && c === 1) return this.ruleset[2];\r\n                if (a === 1 && b === 0 && c === 0) return this.ruleset[3];\r\n                if (a === 0 && b === 1 && c === 1) return this.ruleset[4];\r\n                if (a === 0 && b === 1 && c === 0) return this.ruleset[5];\r\n                if (a === 0 && b === 0 && c === 1) return this.ruleset[6];\r\n                if (a === 0 && b === 0 && c === 0) return this.ruleset[7];\r\n                return 0;\r\n            };\r\n        }\r\n\r\n        // let x = 100;\r\n        // let y = 100;\r\n\r\n        let ca;\r\n        sketch.setup = () => {\r\n            sketch.createCanvas(0.8 * parent.offsetWidth, 0.8 * parent.offsetWidth);\r\n            ca = new CA(ruleNum);\r\n            sketch.resizeCanvas(n * ca.w, n * ca.w);\r\n            sketch.background(0);\r\n        };\r\n\r\n        sketch.draw = () => {\r\n            ca.display();\r\n            if (ca.generation < sketch.height / ca.w) {\r\n                ca.generate();\r\n            }\r\n        };\r\n\r\n        sketch.windowResized = () => {\r\n            sketch.resizeCanvas(0.8 * parent.offsetWidth, 0.8 * parent.offsetWidth);\r\n            ca = new CA(ruleNum);\r\n            sketch.resizeCanvas(n * ca.w, n * ca.w);\r\n            sketch.background(0);\r\n        }\r\n    };\r\n\r\n    let elemp5 = new p5(s, parent);\r\n    return elemp5;\r\n}","import React, { useState, useRef } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport MarginedContainer from '../MarginedContainer';\r\nimport ElemCARuleCell from './ElemCARuleCell';\r\nimport ElemCAp5 from './ElemCAp5'\r\n\r\nconst buttonIds = [...Array(8).keys()].reverse().map(x => {\r\n    return x.toString(2).padStart(3, '0');\r\n})\r\n\r\nconst numToToggles = (num) => {\r\n    const numList = num.toString(2).padStart(8, '0').split('');\r\n    return numList.map(x => !!parseInt(x));\r\n}\r\n\r\nconst togglesToNum = (toggles) => {\r\n    const t = [...toggles]\r\n    return t.reverse().reduce((total, t, i) => {\r\n        return total += t * 2 ** i;\r\n    }, 0);\r\n}\r\n\r\nexport default function ElemCARuleController(props) {\r\n    const ruleNum = props.ruleNum;\r\n    const setRuleNum = props.setRuleNum;\r\n    const [error, setError] = useState(false);\r\n    const [toggles, setToggles] = useState([...Array(8).fill(false)])\r\n    const elemP5Parent = useRef(null);\r\n    const [canvas, setCanvas] = useState(null);\r\n\r\n    const handleRuleNumChange = event => {\r\n        let input = event.target.value\r\n        \r\n        if (isNaN(input)) {\r\n            setError(true);\r\n        } else {\r\n            input = parseInt(input)\r\n            if (input < 0 || input > 255) setError(true);\r\n            else {\r\n                setError(false);\r\n                setRuleNum(input);\r\n                setToggles(numToToggles(input));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCellClick = event => {\r\n        const t = event.currentTarget;\r\n        const newToggles = [...toggles];\r\n        newToggles[parseInt(t.getAttribute('index'))] = !t.getAttribute('toggle');\r\n\r\n        setToggles(newToggles);\r\n        setRuleNum(togglesToNum(newToggles));\r\n    }\r\n\r\n    const handleRenderButtonClick = event => {\r\n        if (canvas) canvas.remove();\r\n        setCanvas(ElemCAp5(elemP5Parent.current, ruleNum));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MarginedContainer>\r\n                {buttonIds.map((id, index) => (\r\n                    <ElemCARuleCell id={id}\r\n                        key={index}\r\n                        index={index}\r\n                        toggle={toggles[index] ? 1 : undefined}\r\n                        onClick={handleCellClick}>\r\n                    </ElemCARuleCell>\r\n                ))}\r\n            </MarginedContainer>\r\n\r\n            <MarginedContainer>\r\n                <TextField\r\n                    error={error}\r\n                    id=\"rule-num-inpput\"\r\n                    label=\"Rule Number\"\r\n                    type=\"number\"\r\n                    value={ruleNum}\r\n                    variant=\"outlined\"\r\n                    onChange={handleRuleNumChange}\r\n                    helperText={error ? \"Only number between 0 and 255 allowed!\" : \r\n                                        \"Suggestion: 30, 135, 193\"}\r\n                />\r\n            </MarginedContainer>\r\n            <MarginedContainer>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleRenderButtonClick}>\r\n                    Visualise\r\n                </Button>\r\n            </MarginedContainer>\r\n            <MarginedContainer ref={elemP5Parent}>\r\n                <></>\r\n            </MarginedContainer> \r\n        </>\r\n    )\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\n\r\nlet trainXs = [...Array(8).keys()].reverse().map(x => {\r\n    return x.toString(2).padStart(3, '0');\r\n})\r\n\r\ntrainXs = trainXs.map(x => {\r\n    return x.split(\"\").map(Number);\r\n})\r\n\r\ntrainXs = tf.stack(trainXs);\r\n\r\nexport function getModel(hiddenLayerUnits) {\r\n    const model = tf.sequential();\r\n    const INPUT_SIZE = 3;\r\n\r\n    model.add(tf.layers.inputLayer({ inputShape: [INPUT_SIZE] }));\r\n    if (hiddenLayerUnits > 0) {\r\n        model.add(tf.layers.dense({\r\n            units: hiddenLayerUnits,\r\n            activation: 'relu'\r\n        }));\r\n    }\r\n\r\n    model.add(tf.layers.dense({\r\n        units: 1,\r\n        activation: 'sigmoid'\r\n    }))\r\n    \r\n    // Choose an optimizer, loss function and accuracy metric,\r\n    // then compile and return the model\r\n    const optimizer = tf.train.sgd(0.2);\r\n    model.compile({\r\n        optimizer: optimizer,\r\n        loss: 'binaryCrossentropy',\r\n        metrics: ['accuracy'],\r\n    });\r\n\r\n    return model;\r\n}\r\n\r\nexport async function train(model, caRuleNum) {\r\n    const metrics = ['loss', 'acc'];\r\n    const container = {\r\n        name: 'Model Training', tab: '1D CA'\r\n    };\r\n    const fitCallbacks = {...tfvis.show.fitCallbacks(container, metrics,), \r\n        onEpochEnd: (epoch, logs) => {\r\n            if (logs['acc'] > 0.9) model.stopTraining = true;\r\n        }};\r\n\r\n    let trainYs = caRuleNum.toString(2).padStart(8, '0').split(\"\").map(Number);\r\n    trainYs = tf.stack(trainYs);\r\n\r\n    return model.fit(trainXs, trainYs, {\r\n        epochs: 500,\r\n        callbacks: fitCallbacks\r\n    });\r\n}\r\n\r\nexport function doPrediction(model, data, testDataSize = 500) {\r\n    let preds = model.predict(trainXs).dataSync();\r\n    return preds.map(x => Number(x > 0.5));\r\n}\r\n\r\n// async function showAccuracy(model, data) {\r\n//     const [preds, labels] = doPrediction(model, data);\r\n//     const classAccuracy = await tfvis.metrics.perClassAccuracy(labels, preds);\r\n//     const container = { name: 'Accuracy', tab: 'Evaluation' };\r\n//     tfvis.show.perClassAccuracy(container, classAccuracy, classNames);\r\n\r\n//     labels.dispose();\r\n// }\r\n\r\n// async function showConfusion(model, data) {\r\n//     const [preds, labels] = doPrediction(model, data);\r\n//     const confusionMatrix = await tfvis.metrics.confusionMatrix(labels, preds);\r\n//     const container = { name: 'Confusion Matrix', tab: 'Evaluation' };\r\n//     tfvis.render.confusionMatrix(container, { values: confusionMatrix, tickLabels: classNames });\r\n\r\n//     labels.dispose();\r\n// }\r\n","\r\nimport React, { useState, useRef } from \"react\";\r\nimport { Button, Typography, Slider, Input, Grid } from \"@material-ui/core\";\r\nimport * as tfvis from \"@tensorflow/tfjs-vis\"\r\nimport * as catf from \"./ElemCAtfjs\";\r\n\r\nimport MarginedContainer from '../MarginedContainer';\r\nimport ElemCAp5 from './ElemCAp5'\r\n\r\nexport default function ElemCAML(props) {\r\n  const ruleNum = props.ruleNum;\r\n  const [hiddenLayerUnits, setHiddenLayerUnits] = useState(0);\r\n  const [model, setModel] = useState(null);\r\n  const [isTraining, setIsTraining] = useState(false);\r\n  const modelP5Parent = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n\r\n  const surface1 = { name: 'Model summary', tab: '1D CA' };\r\n  const surface2 = { name: 'Hidden Layer Summary', tab: '1D CA' };\r\n  const surface3 = { name: 'Hidden Layer Summary Post Training', tab: '1D CA'}\r\n\r\n  const handleVisorButtonClick = event => {\r\n    tfvis.visor().open();\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    if (hiddenLayerUnits < 0) {\r\n      setHiddenLayerUnits(0);\r\n    } else if (hiddenLayerUnits > 32) {\r\n      setHiddenLayerUnits(32);\r\n    }\r\n  };\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setHiddenLayerUnits(newValue);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setHiddenLayerUnits(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBuildButtonClick = (event) => {\r\n    let m = catf.getModel(hiddenLayerUnits);\r\n    tfvis.show.modelSummary(surface1, m);\r\n    tfvis.show.layer(surface2, m.getLayer(undefined, 1));\r\n    tfvis.visor().open();\r\n    setModel(m);\r\n  };\r\n\r\n  const handleTrainModelButtonClick = event => {\r\n    catf.train(model, ruleNum).then(() => {\r\n      setIsTraining(false);\r\n      tfvis.show.layer(surface3, model.getLayer(undefined, 1));\r\n    });\r\n    tfvis.visor().open();\r\n    setIsTraining(true);\r\n  }\r\n\r\n  const handleStopTrainingButtonClick = event => {\r\n    model.stopTraining = true;\r\n    setIsTraining(false);\r\n    tfvis.show.layer(surface2, model.getLayer(undefined, 1));\r\n  }\r\n\r\n  const handleVisualiseModelButtonClick = (event) => {\r\n    let predRule = catf.doPrediction(model).reverse().reduce((total, t, i) => {\r\n      return total += t * 2 ** i;\r\n    }, 0);\r\n    console.log(predRule);\r\n    if (canvas) canvas.remove();\r\n    setCanvas(ElemCAp5(modelP5Parent.current, predRule));\r\n  }\r\n  return (\r\n    <>\r\n      <MarginedContainer>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleVisorButtonClick}>\r\n          Show tensorflow board\r\n        </Button>\r\n      </MarginedContainer>\r\n      <MarginedContainer>\r\n        <Typography id=\"hidden-unit-slider\" gutterBottom>\r\n          Units in hidden layer\r\n        </Typography>\r\n        <Grid container spacing={2} justify=\"center\">\r\n          <Grid item>\r\n            <Slider\r\n              value={typeof hiddenLayerUnits === 'number' ? hiddenLayerUnits : 0}\r\n              onChange={handleSliderChange}\r\n              aria-labelledby=\"hidden-unit-slider\"\r\n              style={{ width: 64 }}\r\n              min={0}\r\n              max={32}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              value={hiddenLayerUnits}\r\n              margin=\"dense\"\r\n              onChange={handleInputChange}\r\n              onBlur={handleBlur}\r\n              inputProps={{\r\n                min: 0,\r\n                max: 32,\r\n                type: 'number',\r\n                'aria-labelledby': 'hidden-unit-slider',\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleBuildButtonClick}>\r\n              Build Model\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </MarginedContainer>\r\n      {\r\n        model ? \r\n        <MarginedContainer>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleVisualiseModelButtonClick}>\r\n                  Visualise\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"contained\" color=\"primary\" \r\n                        onClick={handleTrainModelButtonClick}\r\n                        disabled={isTraining}>\r\n                  Train Model\r\n                </Button>\r\n              </Grid>\r\n              {\r\n                isTraining ? \r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"secondary\"\r\n                    onClick={handleStopTrainingButtonClick}>\r\n                    Stop training\r\n                  </Button>\r\n                </Grid> : null\r\n              }\r\n             \r\n            </Grid>\r\n        </MarginedContainer> : null\r\n      }\r\n      <MarginedContainer ref={modelP5Parent}>\r\n        <></>\r\n      </MarginedContainer>\r\n    </>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport TwoColumnsGrid from './TwoColumnsGrid';\r\n// import MarginedContainer from './MarginedContainer';\r\nimport ElemCARuleController from './ElemCA/ElemCARuleController';\r\nimport ElemCAML from './ElemCA/ElemCAML';\r\nimport MainTextBox from \"./MainTextBox\";\r\n\r\nexport default function ElemCA() {\r\n  const [ruleNum, setRuleNum] = useState(0);\r\n\r\n  const left = (\r\n    <>\r\n      <Typography variant='h4' gutterBottom>Elementary CA</Typography>\r\n      <MainTextBox>\r\n        <a href='https://www.cantorsparadise.com/elementary-cellular-automaton-e27e3d1008d9'>Wolfram's elementary cellular automata</a> are one-dimensional, constructed with two possible values for each cell (0 or 1),\r\n        and rules that depend only on itself and the nearest neighbor values.<br/>\r\n        Below is a simple demo you can play around with different rule set by either clicking on individual rule cells or input the rule number directly. The top row in the grid is initialised with only the middle cell \"on\", and every row below is 1 timestep after evolving from its row above. \r\n      </MainTextBox>\r\n      <ElemCARuleController ruleNum={ruleNum} setRuleNum={setRuleNum} />\r\n    </>\r\n  )\r\n  const right = (\r\n    <>\r\n      <Typography variant='h4' gutterBottom>Multi-layer Perceptron</Typography>\r\n      <MainTextBox>\r\n        In this simple demo, we use a simple multilayer perceptron model to learn the CA update rule. Notice this problem is a non-linearly separable problem like the XOR problem, so if there's no hidden layer (hidden layer units slider set to 0), the single output perceptron would not be able to converge to a solution.<br/>\r\n        You can play around and build models, change hyperparameters, and train the model to learn the CA rule you have specified on the CA side. Compare the visualisation result before and after the training is complete.\r\n      </MainTextBox>\r\n      <img alt=\"mlp model\" style={{ maxWidth: '80%' }} src='https://ars.els-cdn.com/content/image/1-s2.0-S2405656118301020-gr1.jpg'></img>\r\n      <ElemCAML ruleNum={ruleNum}/>\r\n    </>\r\n  )\r\n  return <TwoColumnsGrid left={left} right={right} />;\r\n}","import React from \"react\";\r\n\r\nexport default function GoL() {\r\n  return <img alt=\"under construction\" \r\n  src='https://www.tsohost.com/assets/uploads/blog/under-construction-pages-1-image-library.jpg'\r\n  style={{maxWidth: \"90%\"}}/>;\r\n}","import React from \"react\";\r\n\r\nexport default function Texture() {\r\n    return <img alt=\"under construction\"\r\n        src='https://www.tsohost.com/assets/uploads/blog/under-construction-pages-1-image-library.jpg'\r\n        style={{ maxWidth: \"90%\" }} />;\r\n}","import * as tfvis from '@tensorflow/tfjs-vis';\r\n\r\nexport default function createVisor() {\r\n    const visor = tfvis.visor();\r\n    visor.el.style.position = \"absolute\";\r\n    visor.el.style.zIndex = 2000;\r\n    visor.el.children[0].style.maxWidth=\"100%\";\r\n    visor.close();\r\n}","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport TextureIcon from '@material-ui/icons/Texture';\r\n\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Home, ElemCA, GoL, Texture } from \"./components\";\r\nimport { createVisor } from './helper';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(createVisor);\r\n\r\n    const handleDrawerOpen = (e) => {\r\n        e.preventDefault();\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = (e) => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        CA-ML Webapp Demo\r\n          </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n\r\n                <List>\r\n                    <ListItem button key=\"Intro\" component={Link} to=\"/\">\r\n                        <ListItemIcon> <InfoIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Introduction\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"elementary\" component={Link} to=\"/elementary\">\r\n                        <ListItemIcon> <LooksOneIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Elementary CA\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"gol\" component={Link} to=\"/gol\">\r\n                        <ListItemIcon> <BugReportIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Game of Life\" />\r\n                    </ListItem>\r\n                    <ListItem button key=\"texture_synthesis\" component={Link} to=\"/texture\">\r\n                        <ListItemIcon> <TextureIcon /> </ListItemIcon>\r\n                        <ListItemText primary=\"Texture Synthesis\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={() => <Home />} />\r\n                    <Route exact path=\"/elementary\" component={() => <ElemCA />} />\r\n                    <Route exact path=\"/gol\" component={() => <GoL />} />\r\n                    <Route exact path=\"/texture\" component={() => <Texture />} />\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}